#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 8

layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = WORKGROUP_SIZE) in;

layout(set = 0, binding = 0) uniform CameraBufferObject {
    mat4 view;
    mat4 proj;
} camera;

layout(set = 1, binding = 0) uniform Time {
    float deltaTime;
    float totalTime;
};

layout(set = 2, binding = 0, r32f) coherent uniform image3D SourceMeshSDF;
layout(set = 3, binding = 0, r32f) coherent uniform image3D TargetMeshSDF;

void main() {
	
    ivec3 coord = ivec3(gl_WorkGroupID * gl_WorkGroupSize + gl_LocalInvocationID);

	ivec3 minBounds = clamp(coord - 1, ivec3(0), ivec3(255));
	ivec3 maxBounds = clamp(coord + 1, ivec3(0), ivec3(255));

	float oldValue = imageLoad(SourceMeshSDF, coord).x;

	float value = 0.0;
	float count = 0.0;
	for (int k = minBounds.z; k <= maxBounds.z; ++k) {
		for (int j = minBounds.y; j <= maxBounds.y; ++j) {
			for (int i = minBounds.x; i <= maxBounds.x; ++i) {
				value += imageLoad(SourceMeshSDF, ivec3(i, j, k)).x;
				++count;
			}
		}
	}
	value /= count;

	float newValue = mix(oldValue, value, deltaTime * 100);

	imageStore(TargetMeshSDF, coord, vec4(newValue));
}